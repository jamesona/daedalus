{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.ts","webpack:///external \"electron\""],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;AClFA,uEAAuE;AACvE,iEAA6C;AAG7C,IAAI,UAAyC;AAE7C,SAAS,OAAO;IACd,UAAU,GAAG,IAAI,wBAAa,CAAC;QAC7B,KAAK,EAAE,GAAG;QACV,MAAM,EAAE,GAAG;KACZ,CAAC;IAEF,IAAM,QAAQ,GAAM,SAAS,gBAAa;IAC1C,IAAM,GAAG,GAAG,YAAU,QAAU;IAChC,gCAAgC;IAChC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC;IACvB,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE;QACrB,UAAU,GAAG,IAAI;QACjB,cAAG,CAAC,IAAI,EAAE;IACZ,CAAC,CAAC;IAEF,UAAU,CAAC,WAAW,CAAC,YAAY,EAAE;AACvC,CAAC;AAED,cAAG,CAAC,EAAE,CAAC,OAAO,EAAE,cAAM,cAAO,EAAE,EAAT,CAAS,CAAC;AAChC,cAAG,CAAC,EAAE,CAAC,UAAU,EAAE;IACjB,IAAI,UAAU,KAAK,IAAI;QAAE,OAAO,EAAE;AACpC,CAAC,CAAC;AACF,cAAG,CAAC,EAAE,CAAC,mBAAmB,EAAE;IAC1B,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ;QAAE,cAAG,CAAC,IAAI,EAAE;AAC/C,CAAC,CAAC;AACF,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC;AAClD,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,cAAG,CAAC,UAAU,EAAE,CAAC;AACjD,4EAA4E;AAC5E,uEAAuE;;;;;;;;;;;;AClCvE,qC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.ts\");\n","// Modules to control application life and create native browser window\nimport { app, BrowserWindow } from 'electron'\ndeclare var __dirname: string\n\nlet mainWindow: Electron.BrowserWindow | null\n\nfunction onReady() {\n  mainWindow = new BrowserWindow({\n    width: 800,\n    height: 600\n  })\n\n  const filename = `${__dirname}/index.html`\n  const url = `file://${filename}`\n  // mainWindow.loadFile(filename)\n  mainWindow.loadURL(url)\n  mainWindow.on('close', () => {\n    mainWindow = null\n    app.quit()\n  })\n\n  mainWindow.webContents.openDevTools()\n}\n\napp.on('ready', () => onReady())\napp.on('activate', function () {\n  if (mainWindow === null) onReady()\n})\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') app.quit()\n})\nconsole.log('Node Version', process.versions.node)\nconsole.log('Electron Version', app.getVersion())\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here.\n","module.exports = require(\"electron\");"],"sourceRoot":""}